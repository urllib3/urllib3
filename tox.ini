[tox]
envlist = flake8-py3, py27, py34, py35, py36, py37, py38, pypy, py{27,37}-nobrotli

[testenv]
deps= -r{toxinidir}/dev-requirements.txt
extras = socks,secure,brotli
commands =
    # Print out the python version and bitness
    pip --version
    python --version
    python -c "import struct; print(struct.calcsize('P') * 8)"
    python -m OpenSSL.debug
    # Inspired from https://github.com/pyca/cryptography
    # We use parallel mode and then combine here so that coverage.py will take
    # the paths like .tox/pyXY/lib/pythonX.Y/site-packages/urllib3/__init__.py
    # and collapse them into src/urllib3/__init__.py.
    coverage run --parallel-mode -m pytest -r sx test {posargs}
    coverage combine
    coverage report -m
setenv =
    PYTHONWARNINGS=always::DeprecationWarning
passenv = CFLAGS LDFLAGS TRAVIS APPVEYOR CRYPTOGRAPHY_OSX_NO_LINK_FLAGS TRAVIS_INFRA

[testenv:py27-nobrotli]
extras = socks,secure

[testenv:py37-nobrotli]
extras = socks,secure

[testenv:gae]
basepython = python2.7
deps=
    {[testenv]deps}
commands=
    coverage run --parallel-mode -m pytest -r sx test/appengine {posargs}
    coverage combine
    coverage report -m
setenv =
    GAE_SDK_PATH={env:GAE_SDK_PATH:}
    {[testenv]setenv}
passenv = TRAVIS TRAVIS_INFRA

[testenv:flake8-py3]
basepython = python3
deps=
    flake8
commands=
    flake8 --version
    flake8 setup.py docs dummyserver src test

[testenv:docs]
deps=
    -r{toxinidir}/docs/requirements.txt
commands=
    rm -rf {toxinidir}/docs/_build
    make -C {toxinidir}/docs html
whitelist_externals=
    make
    rm
