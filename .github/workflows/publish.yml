name: Publish to PyPI

on:
  push:
    branches:
      # We don't publish to Test PyPI on pushes to 1.26.x yet because there is
      # no mechanism to get a dynamic version number in the branch yet.
      # - "1.26.x"
      - "main"
    tags:
      - "*"

permissions:
  contents: "read"

jobs:
  build:
    if: github.repository_owner == 'urllib3'
    name: "Build distribution ðŸ“¦"
    runs-on: "ubuntu-latest"
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
        with:
          fetch-depth: 0 # Needed to fetch the version from git
          persist-credentials: false

      - name: "Setup Python"
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.x"

      - name: "Install dependencies"
        run: python -m pip install build==0.8.0

      - name: "Build dists"
        run: |
          SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) \
          python -m build

      - name: "Generate hashes"
        id: hash
        run: |
          cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: "Upload dists"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        id: upload-artifact
        with:
          name: "dist"
          path: "dist/"
          if-no-files-found: error
          retention-days: 5

  publish-to-pypi-and-github:
    name: "Publish to PyPI"
    if: ${{ github.ref_type == 'tag' }}
    needs: ["build"]
    permissions:
      contents: write # Needed for making GitHub releases
      id-token: write # Needed for trusted publishing to PyPI.
    runs-on: "ubuntu-latest"
    environment:
      name: "publish"

    steps:
    - name: "Download dists"
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        artifact-ids: ${{ needs.build.outputs.artifact-id }}
        path: "dist/"
        merge-multiple: true

    - name: "Upload dists to a new GitHub Release Draft"
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: |
        gh release create "$GITHUB_REF_NAME" \
          --repo "$GITHUB_REPOSITORY" \
          --draft \
          --title "$GITHUB_REF_NAME" \
          --notes "" \
          --verify-tag
        gh release upload "$GITHUB_REF_NAME" dist/* --repo "$GITHUB_REPOSITORY"

    - name: "Publish dists to PyPI"
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
      with:
        attestations: true

  publish-to-test-pypi:
    name: "Publish to Test PyPI"
    needs: ["build"]
    permissions:
      id-token: write # Needed for trusted publishing to PyPI.
    runs-on: "ubuntu-latest"
    environment:
      name: "testpypi"

    steps:
    - name: "Download dists"
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        artifact-ids: ${{ needs.build.outputs.artifact-id }}
        path: "dist/"
        merge-multiple: true

    - name: "Publish dists to Test PyPI"
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
      with:
        repository-url: https://test.pypi.org/legacy/
        attestations: true
