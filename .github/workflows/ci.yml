name: CI

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Check packages
        run: |
          python3.7 -m pip install pip setuptools wheel twine rstcheck;
          python3.7 setup.py sdist bdist_wheel;
          rstcheck README.rst CHANGES.rst
          python3.7 -m twine check dist/*
  test:
    env:
      SETUPTOOLS_USE_DISTUTILS: stdlib
    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10"]
        os: [macos-latest, windows-latest, ubuntu-latest]
        experimental: [false]
        nox-session: ['']
        include:
          - python-version: "pypy3"
            os: ubuntu-latest
            experimental: false
            nox-session: test-pypy
          - python-version: "pypy2"
            os: ubuntu-latest
            experimental: false
            nox-session: test-pypy
          - python-version: "2.7"
            os: ubuntu-latest
            experimental: false
            nox-session: google_brotli-2
          - python-version: "3.9"
            os: ubuntu-latest
            experimental: false
            nox-session: google_brotli-3
          - python-version: "2.7"
            os: ubuntu-latest
            experimental: false
            nox-session: app_engine
          - python-version: 3.11-dev
            os: ubuntu-latest
            experimental: true
            nox-session: test-3.11

    runs-on: ${{ matrix.os }}
    name: ${{ fromJson('{"macos-latest":"macOS","windows-latest":"Windows","ubuntu-latest":"Ubuntu"}')[matrix.os] }} ${{ matrix.python-version }} ${{ matrix.nox-session}}
    continue-on-error: ${{ matrix.experimental }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Python - ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set Up Python 3 to run nox
        if: matrix.python-version != '3.7'
        uses: actions/setup-python@v2
        with:
          python-version: "3"

      - name: Install Dependencies
        run: python -m pip install --upgrade pip setuptools nox

      - name: Run Tests
        run: ./ci/run_tests.sh
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}
          NOX_SESSION: ${{ matrix.nox-session }}

      - name: Upload Coverage
        if: ${{ matrix.nox-session != 'unsupported_python2' }}
        uses: "actions/upload-artifact@v2"
        with:
          name: coverage-data
          path: ".coverage.*"
          if-no-files-found: error


  coverage:
    runs-on: "ubuntu-latest"
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: "Use latest Python so it understands all syntax"
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: "Install coverage"
        run: "python -m pip install --upgrade coverage"

      - name: "Download coverage data"
        uses: actions/download-artifact@v2
        with:
          name: coverage-data

      - name: "Combine & check coverage"
        run: |
          python -m coverage combine
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report --ignore-errors --show-missing --fail-under=100

      - name: "Upload report if check failed"
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: htmlcov
        if: ${{ failure() }}
